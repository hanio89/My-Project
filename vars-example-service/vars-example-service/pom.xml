<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.6.6</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>
  <groupId>com.resdii.vars</groupId>
  <artifactId>vars-example-service</artifactId>
  <version>1.0.0.16</version>
  <name>vars-example-service</name>

  <properties>
    <java.version>1.8</java.version>
    <spring-cloud.version>2021.0.1</spring-cloud.version>
    <spring.cloud.k8s.version>2.1.1</spring.cloud.k8s.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <mapstruct.version>1.4.2.Final</mapstruct.version>
    <lombok.version>1.18.22</lombok.version>
    <lombok.binding.version>0.2.0</lombok.binding.version>
    <docker.imagePrefix>10.79.60.7:8010</docker.imagePrefix>
  </properties>

  <repositories>
    <!--    <repository>-->
    <!--      <id>maven</id>-->
    <!--      <name>maven</name>-->
    <!--      <url>https://repo.maven.apache.org/maven2/</url>-->
    <!--    </repository>-->
    <repository>
      <name>nexus</name>
      <id>nexus</id>
      <url>http://10.79.60.7:8009/repository/maven-public</url>
    </repository>
  </repositories>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-kubernetes-dependencies</artifactId>
        <version>${spring.cloud.k8s.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-openfeign</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>
    <dependency>
      <groupId>com.resdii.noodev</groupId>
      <artifactId>noodev-ms-minio</artifactId>
      <version>1.0.1</version>
    </dependency>
    <dependency>
      <groupId>com.resdii.noodev</groupId>
      <artifactId>noodev-ms-core</artifactId>
      <version>1.0.3</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.resdii.noodev</groupId>
      <artifactId>noodev-ms-core</artifactId>
      <version>1.0.3</version>
    </dependency>
    <dependency>
      <groupId>com.resdii.noodev</groupId>
      <artifactId>noodev-java-sdk</artifactId>
      <version>1.0.1</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-sleuth</artifactId>
    </dependency>
    <dependency>
      <groupId>com.resdii.noodev</groupId>
      <artifactId>noodev-ms-redis</artifactId>
      <version>1.0.0</version>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
          <configuration>
            <annotationProcessorPaths>
              <path>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.version}</version>
              </path>
              <path>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
              </path>
              <path>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok-mapstruct-binding</artifactId>
                <version>${lombok.binding.version}</version>
              </path>
            </annotationProcessorPaths>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.2</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.2</version>
        <executions>
          <execution>
            <id>prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
          <execution>
            <id>post-unit-test</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>target/jacoco.exec</dataFile>
              <!-- Sets the output directory for the code coverage report. -->
              <outputDirectory>target/jacoco-aggregate-report</outputDirectory>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <excludes>
            <exclude>jdk.internal.*</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.google.cloud.tools</groupId>
        <artifactId>jib-maven-plugin</artifactId>
        <version>3.2.1</version>
        <configuration>
          <allowInsecureRegistries>true</allowInsecureRegistries>
          <to>
            <image>${docker.imagePrefix}/${project.artifactId}:${project.version}</image>
          </to>
          <extraDirectories>
            <paths>
              <path>skywalking</path>
            </paths>
          </extraDirectories>
          <container>
            <jvmFlags>
              <jvmFlag>-javaagent:skywalking-agent.jar</jvmFlag>
            </jvmFlags>
          </container>
        </configuration>
      </plugin>
    </plugins>
    <finalName>${project.artifactId}</finalName>
  </build>

</project>
